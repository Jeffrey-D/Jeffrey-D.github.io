<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Scrapy爬虫学习日记（三）- 简单爬取一页数据]]></title>
    <url>%2F2019%2F01%2F27%2FScrapy%E7%88%AC%E8%99%AB%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89-%E7%AE%80%E5%8D%95%E7%88%AC%E5%8F%96%E4%B8%80%E9%A1%B5%E6%95%B0%E6%8D%AE%2F</url>
    <content type="text"><![CDATA[爬取book.douban.com一页数据目的数据：豆瓣读书第一页的推荐书名以及作者 项目基本结构的搭建新建项目以及爬虫 新建项目：scrapy startproject douban 在spider目录下，新建爬虫：scrapy genspider book &quot;book.douban.com&quot; book.py基本属性配置 1234567891011# -*- coding: utf-8 -*-import scrapyclass BookSpider(scrapy.Spider): name = 'book' allowed_domains = ['book.douban.com'] start_urls = ['http://book.douban.com/'] def parse(self, response): pass 其中创建爬虫的时候的网址不需要加http:// 否则在start_urls中会再加上一个，对爬取多页数据有影响 items.py编写在本文件中定义我们要存储的数据，也就是目的。豆瓣读书的页面如下，我们需要获取的是书名以及作者。故在items中，我们需要存储的就是book_name,author两项内容，代码如下：123456789101112131415# -*- coding: utf-8 -*-# Define here the models for your scraped items## See documentation in:# https://doc.scrapy.org/en/latest/topics/items.htmlimport scrapyclass DoubanItem(scrapy.Item): # define the fields for your item here like: # name = scrapy.Field() book_name = scrapy.Field() author = scrapy.Field() prase函数编写推荐工具： 浏览器：Google chrom 谷歌浏览器插件：xpath helper 获取书名的xpath路径xpath表示法可以利用xpath helper工具来测试路径，这里通过观察可以发现书本的信息都是存储在一个&lt;div class=&#39;info&#39;&gt;中。根据xpath表达式的构成规则，可以得到总的表达式：//div[@class=&#39;info&#39;]紧接着获取其中细致的信息，代码如下：12item[&apos;book_name&apos;] = book.xpath(&quot;./div[1]/a/text()&quot;).extract()[0]item[&apos;author&apos;] = book.xpath(&quot;./div[2]/text()&quot;).extract()[0].strip() css表示法利用html的css表示规则即可获取,语法可见以下网页。点我了解语法 google chrom 快捷表示法 爬取测试 注意事项在爬取豆瓣的时候，首先要在settings文件里面，将robot文件的读取关闭，其次就是，豆瓣有反爬虫机制，所以需要的是设置:user_agent属性，一些手机的本属性配置可以在百度上得到，比如说我用的是：&#39;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36&#39; 需要完善管道的编写以保存数据信息]]></content>
  </entry>
  <entry>
    <title><![CDATA[Scrapy爬虫学习日记（二）-第一个项目]]></title>
    <url>%2F2019%2F01%2F24%2FScrapy%E7%88%AC%E8%99%AB%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89-%E7%AC%AC%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE%2F</url>
    <content type="text"><![CDATA[基本命令 创建项目：scrapy startproject pfojectname 创建爬虫：scrapy genspider spidername 用CrawlSpider模板创建爬虫：scrapy genspider -t 运行scrapy shell：scrapy shell &quot;targetsite.com&quot; 运行爬虫 scrapy crawl spidername 项目结构这是新建的测试项目的项目结构。 spider文件其中/testscrapy/testscrapy/spider 文件夹下的是我们的爬虫文件，其中是通过模板构建的代码。example.py:1234567891011# -*- coding: utf-8 -*-import scrapyclass ExampleSpider(scrapy.Spider): name = &apos;example&apos; allowed_domains = [&apos;example.com&apos;] start_urls = [&apos;http://example.com/&apos;] def parse(self, response): pass name=:表示的是你的爬虫名 allowed_domains = [&#39;example.com&#39;]:表示允许的域名，在创建爬虫时指定，不用加上http://或者https:// start_urls:表示的是第一个开始爬的页面 prase:本方法是对于每一个爬取的页面的处理方法，也就是我们具体的获取数据的方法。 items.py文件在此文件中，指定的是我门需要存储的信息，其中的样例代码给了一个例子：1234567891011121314# -*- coding: utf-8 -*-# Define here the models for your scraped items## See documentation in:# https://doc.scrapy.org/en/latest/topics/items.htmlimport scrapyclass TestscrapyItem(scrapy.Item): # define the fields for your item here like: # name = scrapy.Field() pass name指定存储的属性名 同时可以在此文件夹下定义多个存储的对象。直到现在我们所获取的数据都是在存储的阶段，那么想要存储怎么办，这就涉及到下一个文件，管道文件了。 pipelines.py文件在此管道文件中，可以定义数据的处理方法，比如保存或者将链接提交给下载器或者其他之类的。参考源码如下：1234567891011# -*- coding: utf-8 -*-# Define your item pipelines here## Don't forget to add your pipeline to the ITEM_PIPELINES setting# See: https://doc.scrapy.org/en/latest/topics/item-pipeline.htmlclass TestscrapyPipeline(object): def process_item(self, item, spider): return item middlewares.py文件此文件用在防止爬虫卡死设置中间代理 settigs.py文件主要是相关于爬虫的配置，其中有以下配置可能用的会多一点。 设置是否忽略robot.txt文件 12# Obey robots.txt rulesROBOTSTXT_OBEY = True 管道优先级 123ITEM_PIPELINES = &#123;'testscrapy.pipelines.TestscrapyPipeline': 300,&#125; 模拟客户端 12# Crawl responsibly by identifying yourself (and your website) on the user-agentUSER_AGENT = 'testscrapy (+http://www.yourdomain.com)' 同时下载的线程数 1CONCURRENT_REQUESTS = 32]]></content>
      <categories>
        <category>Scrapy</category>
      </categories>
      <tags>
        <tag>Scrapy</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scrapy爬虫学习日记（一）-安装配置]]></title>
    <url>%2F2019%2F01%2F22%2FScrapy%E7%88%AC%E8%99%AB%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89-%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[安装Scrapy直接在windows的dos界面执行pip3 install Scrapy,但是一大串信息跑完以后，报如下错误。error: Microsoft Visual C++ 14.0 is required. Get it with &quot;Microsoft Visual C++ Build Tools&quot;: http://landinghub.visualstudio.com/visual-cpp-build-tools。我想着这是要安装VC++哪个包啊，难受鸭，算了还是先百度一下。 百度完了发现大多数都有我这样的问题，无法安装Scrapy是因为无法安装Twisted,于是转战安装Twisted,直接执行pip install Twisted，嘤嘤嘤，还是error: Microsoft Visual C++ 14.0 is required. Get it with &quot;Microsoft Visual C++ Build Tools&quot;: http://landinghub.visualstudio.com/visual-cpp-build-tools，这个错误。 于是乎终于找到了真正的安装twisted的方法，在这个肥官方的网站上，可以找到相应的包，下载到本地，随便你下载到哪，https://www.lfd.uci.edu/~gohlke/pythonlibs/#twisted 。然后执行pip install yourpath\Twisted-18.9.0-cp37-cp37m-win32.whl 其中：yourpath： 你存放此whl文件的绝对路径，比如说c:\Users\ish\Desktop\Twisted‑18.9.0‑cp37‑cp37m‑win_amd64.whl。 可能会出现的错误: Twisted‑18.9.0‑cp37‑cp37m‑win_amd64.whl is not a valid wheel filename,这一看就是乱搞了文件名（我就是这样),网站上下载下来千万别动文件名，千万千万。 Twisted-18.9.0-cp37-cp37m-win_amd64.whl is not a supported wheel on this platform.请注意，如果你是64位系统，看到网站上的adm64,下载下来却不支持，所以，如果你是64位系统，可以下载32的whl文件，不会遇到不支持的说法。 成功安装成功的执行pip后，最终你终于可以自信的敲下pip install Scrapy,看到安装成功的标志了。]]></content>
      <categories>
        <category>Scrapy</category>
      </categories>
      <tags>
        <tag>Scrapy</tag>
        <tag>twisted</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo优化(鼠标点击效果+评论系统+站点统计+hexo-admin-qiniu+markdown图片存储+live2d板娘）]]></title>
    <url>%2F2019%2F01%2F18%2FHexoBetter%2F</url>
    <content type="text"><![CDATA[[TOC] 鼠标点击效果本博客采用hexo-theme-next主题，大部分的主题可能只是文件的后缀名不相同，文件名相同，可以使用subline Text 3或者其他编辑器修改配置文件等。 鼠标点击出现桃心在\codeblog\themes\next6\source\js下新建文件love.js文件，其中加入代码如下：1!function(e,t,a)&#123;function n()&#123;c(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &apos;&apos;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 500%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;),o(),r()&#125;function r()&#123;for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=&quot;left:&quot;+d[e].x+&quot;px;top:&quot;+d[e].y+&quot;px;opacity:&quot;+d[e].alpha+&quot;;transform:scale(&quot;+d[e].scale+&quot;,&quot;+d[e].scale+&quot;) rotate(45deg);background:&quot;+d[e].color+&quot;;z-index:99999&quot;);requestAnimationFrame(r)&#125;function o()&#123;var t=&quot;function&quot;==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;var a=t.createElement(&quot;div&quot;);a.className=&quot;heart&quot;,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a=t.createElement(&quot;style&quot;);a.type=&quot;text/css&quot;;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)&#125;function s()&#123;return&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;&#125;var d=[];e.requestAnimationFrame=function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document); 在主题文件夹下的layout文件夹下的_layout配置文件里面的&lt;head&gt;&lt;/head&gt;标签里添加1&lt;script type="text/javascript" src="/js/love.js"&gt;&lt;/script&gt; 实现效果如下： 鼠标点击出现爆炸烟花在\codeblog\themes\next6\source\js下新建文件firework.js文件，其中加入代码如下：1&quot;use strict&quot;;function updateCoords(e)&#123;pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top&#125;function setParticuleDirection(e)&#123;var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;return&#123;x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)&#125;&#125;function createParticule(e,t)&#123;var a=&#123;&#125;;return a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=function()&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;function createCircle(e,t)&#123;var a=&#123;&#125;;return a.x=e,a.y=t,a.color=&quot;#F00&quot;,a.radius=0.1,a.alpha=0.5,a.lineWidth=6,a.draw=function()&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1&#125;,a&#125;function renderParticule(e)&#123;for(var t=0;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;function animateParticules(e,t)&#123;for(var a=createCircle(e,t),n=[],i=0;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;targets:n,x:function(e)&#123;return e.endPos.x&#125;,y:function(e)&#123;return e.endPos.y&#125;,radius:0.1,duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule&#125;).add(&#123;targets:a,radius:anime.random(80,160),lineWidth:0,alpha:&#123;value:0,easing:&quot;linear&quot;,duration:anime.random(600,800)&#125;,duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule,offset:0&#125;)&#125;function debounce(e,t)&#123;var a;return function()&#123;var n=this,i=arguments;clearTimeout(a),a=setTimeout(function()&#123;e.apply(n,i)&#125;,t)&#125;&#125;var canvasEl=document.querySelector(&quot;.fireworks&quot;);if(canvasEl)&#123;var ctx=canvasEl.getContext(&quot;2d&quot;),numberOfParticules=30,pointerX=0,pointerY=0,tap=&quot;mousedown&quot;,colors=[&quot;#FF1461&quot;,&quot;#18FF92&quot;,&quot;#5A87FF&quot;,&quot;#FBF38C&quot;],setCanvasSize=debounce(function()&#123;canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+&quot;px&quot;,canvasEl.style.height=window.innerHeight+&quot;px&quot;,canvasEl.getContext(&quot;2d&quot;).scale(2,2)&#125;,500),render=anime(&#123;duration:1/0,update:function()&#123;ctx.clearRect(0,0,canvasEl.width,canvasEl.height)&#125;&#125;);document.addEventListener(tap,function(e)&#123;&quot;sidebar&quot;!==e.target.id&amp;&amp;&quot;toggle-sidebar&quot;!==e.target.id&amp;&amp;&quot;A&quot;!==e.target.nodeName&amp;&amp;&quot;IMG&quot;!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!1),setCanvasSize(),window.addEventListener(&quot;resize&quot;,setCanvasSize,!1)&#125;&quot;use strict&quot;;function updateCoords(e)&#123;pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top&#125;function setParticuleDirection(e)&#123;var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;return&#123;x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)&#125;&#125;function createParticule(e,t)&#123;var a=&#123;&#125;;return a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=function()&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;function createCircle(e,t)&#123;var a=&#123;&#125;;return a.x=e,a.y=t,a.color=&quot;#F00&quot;,a.radius=0.1,a.alpha=0.5,a.lineWidth=6,a.draw=function()&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1&#125;,a&#125;function renderParticule(e)&#123;for(var t=0;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;function animateParticules(e,t)&#123;for(var a=createCircle(e,t),n=[],i=0;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;targets:n,x:function(e)&#123;return e.endPos.x&#125;,y:function(e)&#123;return e.endPos.y&#125;,radius:0.1,duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule&#125;).add(&#123;targets:a,radius:anime.random(80,160),lineWidth:0,alpha:&#123;value:0,easing:&quot;linear&quot;,duration:anime.random(600,800)&#125;,duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule,offset:0&#125;)&#125;function debounce(e,t)&#123;var a;return function()&#123;var n=this,i=arguments;clearTimeout(a),a=setTimeout(function()&#123;e.apply(n,i)&#125;,t)&#125;&#125;var canvasEl=document.querySelector(&quot;.fireworks&quot;);if(canvasEl)&#123;var ctx=canvasEl.getContext(&quot;2d&quot;),numberOfParticules=30,pointerX=0,pointerY=0,tap=&quot;mousedown&quot;,colors=[&quot;#FF1461&quot;,&quot;#18FF92&quot;,&quot;#5A87FF&quot;,&quot;#FBF38C&quot;],setCanvasSize=debounce(function()&#123;canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+&quot;px&quot;,canvasEl.style.height=window.innerHeight+&quot;px&quot;,canvasEl.getContext(&quot;2d&quot;).scale(2,2)&#125;,500),render=anime(&#123;duration:1/0,update:function()&#123;ctx.clearRect(0,0,canvasEl.width,canvasEl.height)&#125;&#125;);document.addEventListener(tap,function(e)&#123;&quot;sidebar&quot;!==e.target.id&amp;&amp;&quot;toggle-sidebar&quot;!==e.target.id&amp;&amp;&quot;A&quot;!==e.target.nodeName&amp;&amp;&quot;IMG&quot;!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!1),setCanvasSize(),window.addEventListener(&quot;resize&quot;,setCanvasSize,!1)&#125;; 在主题文件夹下的layout文件夹下的_layout配置文件里面的&lt;head&gt;&lt;/head&gt;标签里添加1234&lt;!-- 爆炸红心效果 --&gt;&lt;canvas class="fireworks" style="position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;" &gt;&lt;/canvas&gt; &lt;script type="text/javascript" src="//cdn.bootcss.com/animejs/2.2.0/anime.min.js"&gt;&lt;/script&gt; &lt;script type="text/javascript" src="/js/firework.js"&gt;&lt;/script&gt; 展示效果如下 评论系统由hexo-next的官方文档，可以看出hexo支持多种第三方评论插件。 如需取消某个 页面/文章 的评论，在 md 文件的 front-matter 中增加 comments: false 官方文档。 DISQUS编辑 主题配置文件， 将 disqus 下的 enable 设定为 true，同时提供您的 shortname。count 用于指定是否显示评论数量。1234disqus: enable: false shortname: count: true Facebook Comments 由 hydai 贡献需要先集成 Facebook SDK。修改 主题配置文件 以下配置：12345678# Facebook comments plugin# This plugin depends on Facebook SDK.# If facebook_sdk.enable is false, Facebook comments plugin is unavailable.facebook_comments_plugin:enable: falsenum_of_posts: 10 # min posts num is 1width: 100% # default width is 550pxscheme: light # default scheme is light (light or dark) HyperComments 由 ivan-nginx 贡献Add support for Hypercomments system instead of Disqus. 修改 主题配置文件 以下配置： 12# Hypercomments#hypercomments_id: 网易云跟帖 由 geekrainy 贡献登陆 网易云跟帖 获取你的 Product Key。 编辑 主题配置文件， 编辑 gentie_productKey 字段，设置如下：123456gentie_productKey: #your-gentie-product-key请注意，您在云跟帖管理后台设置的域名必须跟您站点的域名一致。在本地测试时，需要做两步骤前置设定：修改 hosts 文件，将您域名的请求指向本地。例如：127.0.0.1 notes.example.com修改 Hexo 监听的端口为 80：hexo s --debug -p 80测试完成后请将 hosts 文件中的域名映射删除。 来必力 由 asmoker 贡献登陆 来必力 获取你的 LiveRe UID。 编辑 主题配置文件， 编辑 livere_uid 字段，设置如下：1livere_uid: #your livere_uid 本博客采用的是来必力的评论系统，登陆来比力获取city免费版，获取UID，放在主题配置文件config中的livere_uid中，(要先取消UID的注释） 效果图: 站内统计本博客采用的是不蒜子的站内统计，具体配置如下： 注意： 此特性在版本 5.0.1 中引入，要使用此功能请确保所使用的 NexT 版本在此之后 全局配置 编辑 主题配置文件 中的busuanzi_count的配置项。 当enable: true时，代表开启全局开关。若site_uv、site_pv、page_pv的值均为false 时，不蒜子仅作记录而不会在页面上显示。 站点UV配置 当site_uv: true时，代表在页面底部显示站点的UV值。site_uv_header和site_uv_footer为自定义样式配置，相关的值留空时将不显示，可以使用（带特效的）font-awesome。显示效果为[site_uv_header]UV值[site_uv_footer]。 1234# 效果：本站访客数12345人次site_uv: truesite_uv_header: 本站访客数site_uv_footer: 人次 站点PV配置 当site_pv: true时，代表在页面底部显示站点的PV值。site_pv_header和site_pv_footer为自定义样式配置，相关的值留空时将不显示，可以使用（带特效的）font-awesome。显示效果为[site_pv_header]PV值[site_pv_footer]。 1234# 效果：本站总访问量12345次site_pv: truesite_pv_header: 本站总访问量site_pv_footer: 次 单页面PV配置当page_pv: true时，代表在文章页面的标题下显示该页面的PV值（阅读数）。page_pv_header和page_pv_footer为自定义样式配置，相关的值留空时将不显示，可以使用（带特效的）font-awesome。显示效果为[page_pv_header]PV值[page_pv_footer]. 1234# 效果：本文总阅读量12345次page_pv: truepage_pv_header: 本文总阅读量page_pv_footer: 次 效果图: live2D说实话写到这里,这是我最想要的了.以前做django个人博客的时候,有一次去看别的的博客,发现了live2d板娘,当时扣了很长时间的源码都没有找出来这个到底是则么构造的,偶然之间发现这是叫live2d板娘,当时的个人博客上并没有实现他.而hexo框架完美的结合了各种第三方库,在hexo中可以直接安装. 以下是使用流程： 下载相应的模板 在项目文件夹下使用git bash工具，执行npm install {packagename},其中的packagename可以在次项目中找到。live2d模板. 我使用的是live2d-widget-model-z16。 在项目配置文件(_config)中添加以下代码： 1234567891011live2d: enable: true scriptFrom: local model: use: live2d-widget-model-z16 #模型选择 display: position: right #模型位置 width: 100 #模型宽度 height: 200 #模型高度 mobile: show: false #是否在手机端显示 执行效果如下： hexo-admin-qiniu后台管理最开始创建文章，必须在本地新建一个md文件，然后以markdown的格式去新建博客。在本地没有markdown编辑器的时候，很难受,不能实时看到编辑的效果，于是在想有没有当初的做django时候的后台管理。一番搜索之后，有hexo-admin和hexo-admin-qiniu两种选择，其中后者绑定七牛云，可以直接实现粘贴图片，很舒服。所以采用后者。 安装方法：npm install hexo-admin-qiniu 然后在项目配置文件（_config)中，添加一下代码：12345678#Qiniuadmin: qiniuCfg: imageslim: true # 启动图片瘦身，仅华东区bucket可以使用 AccessKey: 'your key' SecretKey: 'your key' BucketName: 'your bucketname' bucketHost: 'your buckethost' 其中前两项是你的七牛云密钥，后者是你新建的存储空间的名字以及外链连接。效果如下： 参考文档 Hexo官方文档]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>live2d</tag>
        <tag>个人博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2019_create_blog]]></title>
    <url>%2F2019%2F01%2F17%2F2019-create-blog%2F</url>
    <content type="text"><![CDATA[Welcome to my Blog已实现功能： 评论系统 运行时间 hexo-admin-qiniu实现图片自动存储 站点统计未实现功能： 站点统计 …]]></content>
      <categories>
        <category>diary</category>
      </categories>
  </entry>
</search>
